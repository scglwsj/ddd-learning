@startuml parking context
package parking << core >> {
  class ParkingLot << Entity >> << Aggregate Root >> {
    << readonly >>
    + ParkingLotId id
    << readonly >>
    + int availableSpaces
    << readonly >>
    + Boolean hasAvailableSpaces

    Map <Ticket, Car> parkedCars

    + Ticket park(Car)
    + Car take(Ticket)
  }

  class Car << Value Object >> {
      PlateNumber plateNumber
  }

  class Ticket << Value Object >> {
    TicketID id
    + Boolean validate()
  }

  interface ParkingLotFinder {
    ParkingLot? findOneValidParkingLot()
  }

  interface ParkingLotFinderFactory << Factory >> {
    ParkingLotFinder newParkingManager()
    ParkingLotFinder newParkingBoy(ParkingBoyId)
  }

  Ticket "1" *--> "1" Car
  ParkingLot "1" o--> "0..many" Ticket
  ParkingLotFinderFactory ..> ParkingLotFinder
}

package finder {
  interface ParkingBoyRule << strategy >> {
    ParkingLot? findOneValidParkingLot(ParkingLot[])
  }

  class ParkingBoy << value object >> {
    << readonly >>
    + ParkingBoyId id

    ParkingLot[] parkingLots
    ParkingBoyRule parkingBoyRule

    + Boolean checkAvailableLot()
  }

  class ParkingManager << value object >> {
    ParkingBoy[] parkingBoys
  }

  ParkingBoy "1" o--> "1" ParkingBoyRule
  ParkingManager "1" o--> "0..many" ParkingBoy
  ParkingManager -|> ParkingLotFinder
  ParkingBoy -|> ParkingLotFinder
}

package rule {
  class OrderParkingBoyRule << strategy >>
  class MostAvailableParkingBoyRule << strategy >>

  OrderParkingBoyRule --|> ParkingBoyRule
  MostAvailableParkingBoyRule -up-|> ParkingBoyRule
}
@enduml

@startuml config context
class ParkingBoy << entity >> << Aggregate Root >> {
  ParkingLotId[] parkingLots
  ParkingRules parkingBoyRule
}

class ParkingLot << entity >> << Aggregate Root >> {
  ParkingLotId id
  int totalSpaces
}

enum ParkingRules {
  ORDER
  MOST_AVAILABLE
}

class ParkingBoyService << service >> {
  Map<ParkingBoy, ParkingLot[]> findParkingBoys()
}

interface ParkingBoyRepository << repository >> {
  ParkingBoy[] findParkingBoys()
}

interface ParkingLotRepository << repository >> {
  ParkingLot[] findParkingLotsByIds(ParkingLotId[])
}

ParkingBoy "1" o--> "1" ParkingRules
ParkingBoyService "1" o--> "1" ParkingBoyRepository
ParkingBoyService "1" o--> "1" ParkingLotRepository
@enduml
